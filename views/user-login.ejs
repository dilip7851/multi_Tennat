<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>User Login</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
  <style>
    * {
      box-sizing: border-box;
      padding: 0;
      margin: 0;
      font-family: 'Poppins', sans-serif;
    }

    body {
      background: linear-gradient(to right, #4facfe, #00f2fe);
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .login-box {
      background: #fff;
      padding: 40px 35px;
      border-radius: 20px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
      width: 100%;
      max-width: 400px;
      animation: slideUp 0.6s ease-out;
    }

    @keyframes slideUp {
      0% {
        opacity: 0;
        transform: translateY(40px);
      }
      100% {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .login-box h2 {
      text-align: center;
      margin-bottom: 30px;
      font-size: 28px;
      color: #333;
    }

    .form-group {
      margin-bottom: 20px;
      position: relative;
    }

    .form-group input {
      width: 100%;
      padding: 12px 45px 12px 15px;
      border-radius: 10px;
      border: 1px solid #ccc;
      font-size: 16px;
      transition: border-color 0.3s;
    }

    .form-group input:focus {
      outline: none;
      border-color: #4facfe;
    }

    .form-group .icon {
      position: absolute;
      right: 15px;
      top: 50%;
      transform: translateY(-50%);
      font-size: 18px;
      color: #aaa;
      cursor: default;
    }

    .form-group .toggle-password {
      cursor: pointer;
    }

    .error {
      color: #e53e3e;
      font-size: 14px;
      margin-top: 6px;
      margin-left: 5px;
    }

    button {
      width: 100%;
      padding: 14px;
      border: none;
      background: linear-gradient(to right, #43e97b, #38f9d7);
      color: white;
      border-radius: 10px;
      font-size: 16px;
      font-weight: 600;
      cursor: pointer;
      transition: background 0.3s ease;
    }

    button:hover {
      background: linear-gradient(to right, #38f9d7, #43e97b);
    }

    .bottom-links {
      margin-top: 20px;
      text-align: center;
    }

    .bottom-links a {
      text-decoration: none;
      color: #555;
      font-weight: 500;
      transition: color 0.2s;
    }

    .bottom-links a:hover {
      color: #000;
      text-decoration: underline;
    }

    #toast {
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 14px 20px;
      border-radius: 8px;
      font-size: 16px;
      z-index: 1000;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.5s ease;
      display: flex;
      align-items: center;
      gap: 10px;
      font-weight: 500;
    }

    #toast.show {
      opacity: 1;
      pointer-events: auto;
    }

    #toast.success {
      background-color: #38a169;
      color: #fff;
    }

    #toast.error {
      background-color: #e53e3e;
      color: #fff;
    }
  </style>
</head>
<body>

  <div class="login-box">   
    <h2>User Login</h2>
    <form id="loginForm" autocomplete="off">
      <div class="form-group">
        <input type="email" name="email" placeholder="Enter your email" id="emailInput"  />
        <span class="icon">üìß</span>
        <div class="error" id="emailError"></div>
      </div>

      <div class="form-group">
        <input type="password" name="password" placeholder="Enter your password" id="passwordInput" />
        <span class="icon toggle-password" id="togglePassword">üëÅÔ∏è</span>
        <div class="error" id="passwordError"></div>
      </div>

      <button type="submit">Login</button>
    </form>

    <div class="bottom-links">
      <a href="/user/forgot-password">Forgot password?</a>
    </div>
  </div>

  <div id="toast"></div>

  <script>


 const isLoggedIn = localStorage.getItem("userToken");
  if (isLoggedIn) {
    window.location.href = "/user/dashboard";
  }

    const togglePassword = document.getElementById('togglePassword');
    const passwordInput = document.getElementById('passwordInput');
    const emailInput = document.getElementById('emailInput');

    togglePassword.addEventListener('click', () => {
      const isHidden = passwordInput.type === 'password';
      passwordInput.type = isHidden ? 'text' : 'password';
      togglePassword.textContent = isHidden ? 'üôà' : 'üëÅÔ∏è';
    });

    const showToast = (message, type = 'success') => {
       const toast = document.getElementById('toast');
      const icon = type === 'success' ? '‚úîÔ∏è' : '‚ùå';

      toast.className = '';
      toast.textContent = '';
      toast.classList.add('show', type);
      toast.innerHTML = `<span>${icon}</span> ${message}`;

      setTimeout(() => {
        toast.classList.remove('show', 'success', 'error');
      }, 3000);
    };

    const form = document.getElementById('loginForm');
    const adminId = localStorage.getItem('adminId');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const emailError = document.getElementById('emailError');
      const passwordError = document.getElementById('passwordError');

      emailError.textContent = '';
      passwordError.textContent = '';


      const email = emailInput.value.trim();
      const password = passwordInput.value.trim();


      let hasError = false;


      if (!email) {
        emailError.textContent = 'Email is required';
        hasError = true;
      } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
        emailError.textContent = 'Invalid email format';
        hasError = true;
      }

      if (!password) {
        passwordError.textContent = 'Password is required';
        hasError = true;
      }

      if (hasError) return;      
      try {
        const BASE_URL="http://localhost:8000";
        const response = await fetch(`${BASE_URL}/user/${adminId}/login`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },    
          body: JSON.stringify({ email, password }),
        });
               
        let result = {};
        try {
          result = await response.json();
        } catch {
          console.warn('Invalid JSON response');
        }

        if (response.ok) {
          showToast(result.message);
          localStorage.setItem("userToken",result.data.token);
          localStorage.setItem("users",JSON.stringify(result.data.user))
          setTimeout(() => {
            window.location.href = '/user/dashboard';
          }, 800);

        } else {
          showToast(result?.message || 'Login failed', 'error');
        }
      } catch (err) {
        console.error(err);
        showToast('Something went wrong.', 'error');
      }
    });
  </script>
</body>
</html>
