<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<title>Reset Password</title>
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap" rel="stylesheet">
<style>
  * {
    box-sizing: border-box;
  }

  body {
    font-family: 'Roboto', sans-serif;
    margin: 0;
    padding: 0;
    height: 100vh;
    background: linear-gradient(135deg, #a1c4fd, #c2e9fb);
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .container {
    background: #ffffff;
    padding: 40px 30px;
    border-radius: 16px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    max-width: 420px;
    width: 100%;
    transition: transform 0.3s ease;
  }

  .container:hover {
    transform: translateY(-2px);
  }

  h2 {
    color: #333;
    margin-bottom: 25px;
    font-weight: 500;
  }

  .input-group {
    position: relative;
    margin-bottom: 25px;
  }

  .input-group input {
    width: 100%;
    padding: 14px 45px 14px 14px;
    border: 1px solid #ccc;
    border-radius: 10px;
    font-size: 15px;
    transition: border-color 0.3s, box-shadow 0.3s;
    outline: none;
  }

  .input-group input:focus {
    border-color: #007bff;
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
  }

  .input-group i {
    position: absolute;
    top: 50%;
    right: 14px;
    transform: translateY(-50%);
    cursor: pointer;
    font-size: 20px;
    color: #888;
    transition: color 0.3s;
  }

  .input-group i:hover {
    color: #007bff;
  }

  button {
    width: 100%;
    padding: 14px;
    background: #007bff;
    color: white;
    font-size: 16px;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background 0.3s, transform 0.2s;
  }

  button:hover {
    background: #0062cc;
    transform: translateY(-1px);
  }

  .message {
    margin-top: 15px;
    font-size: 14px;
    color: red;
  }

  .message.success {
    color: green;
  }
</style>
</head>
<body>

<div class="container">
  <h2>Create New Password</h2>
  <div class="input-group">
    <input type="password" id="password" placeholder="Enter new password" />
    <i class="material-icons" id="showPassword" onclick="togglePasswordVisibility('password')">visibility</i>
  </div>
  <div class="input-group">
    <input type="password" id="confirmPassword" placeholder="Confirm new password" />
    <i class="material-icons" id="showConfirmPassword" onclick="togglePasswordVisibility('confirmPassword')">visibility</i>
  </div>
  <button onclick="submitNewPassword()">Reset Password</button>
  <div id="msg" class="message"></div>
</div>

<script>
  const msg = document.getElementById('msg');
  const token = new URLSearchParams(window.location.search).get('token');
  const path = window.location.pathname.split('/');
  const adminId = path[2];

  function togglePasswordVisibility(inputId) {
    const input = document.getElementById(inputId);
    const icon = document.getElementById(`show${inputId.charAt(0).toUpperCase() + inputId.slice(1)}`);
    if (input.type === 'password') {
      input.type = 'text';
      icon.textContent = 'visibility_off';
    } else {
      input.type = 'password';
      icon.textContent = 'visibility';
    }
  }

  async function submitNewPassword() {
    const password = document.getElementById('password').value.trim();
    const confirmPassword = document.getElementById('confirmPassword').value.trim();

    msg.className = 'message'; 
    if (password.length < 6) {
      msg.textContent = 'Password must be at least 6 characters.';
      return;
    }
    if (password !== confirmPassword) {
      msg.textContent = 'Passwords do not match.';
      return;
    }



    try {
      const res = await fetch(`http://localhost:8000/user/${adminId}/reset-password?token=${token}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ password })
      });

      const result = await res.json();
      if (res.ok) {
        msg.className = 'message success';
        msg.textContent = result.message || 'Password changed successfully!';
        setTimeout(() => {
          window.location.href = '/user/login';
        }, 1500);
      } else {
        msg.textContent = result.message || 'Failed to reset password.';
      }
    } catch (err) {
      msg.textContent = 'Something went wrong.';
      console.error(err);
    }
  }
</script>

</body>
</html>
