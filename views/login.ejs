<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Login Admin</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet" />
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
      font-family: 'Roboto', sans-serif;
    }

    body {
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      background: linear-gradient(to right, #1e3c72, #2a5298);
      color: #fff;
      padding: 20px;
    }

    .login-container {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(15px);
      padding: 40px 30px;
      border-radius: 15px;
      width: 100%;
      max-width: 400px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
      color: #fff;
      text-align: center;
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    h2 {
      margin-bottom: 25px;
      font-size: 28px;
      font-weight: 600;
    }

    form {
      display: flex;
      flex-direction: column;
      text-align: left;
    }

    input[type="email"],
    input[type="password"],
    input[type="text"] {
      width: 100%;
      padding: 12px 45px 12px 15px;
      margin-bottom: 5px;
      border: none;
      border-radius: 10px;
      font-size: 16px;
      background-color: rgba(255, 255, 255, 0.15);
      color: #fff;
      transition: background 0.3s ease;
    }

    input::placeholder {
      color: #ddd;
    }

    input:focus {
      outline: none;
      background-color: rgba(255, 255, 255, 0.25);
    }

    .error {
      color: #ff4d4f;
      font-size: 14px;
      font-weight: 600;
      margin-top: 5px;
      margin-bottom: 12px;
      padding-left: 5px;
    }

    .password-wrapper {
      position: relative;
      margin-bottom: 5px;
    }


    .forgot{
        float: right;
        margin-top: -25px;
    }

    .forgot:hover{
       text-decoration:underline;
    }

    .toggle-password {
      position: absolute;
      top: 50%;
      right: 15px;
      transform: translateY(-50%);
      cursor: pointer;
      user-select: none;
      font-size: 20px;
      color: #fff;
      transition: color 0.3s ease;
      display: flex;
      align-items: center;
      line-height: 1;
    }

    .toggle-password:hover {
      color: #ffeb3b;
    }

    button {
      background-color: #00c6ff;
      background-image: linear-gradient(45deg, #0072ff, #00c6ff);
      color: white;
      padding: 14px;
      border: none;
      border-radius: 10px;
      font-size: 16px;
      font-weight: 500;
      cursor: pointer;
      transition: background 0.3s ease;
      margin-top: 10px;
    }

    button:hover {
      background-image: linear-gradient(45deg, #005bea, #00c6ff);
    }

    a {
      display: block;
      margin-top: 20px;
      text-decoration: none;
      color: #ffffff;
      font-weight: 500;
      transition: opacity 0.3s ease;
      text-align: center;
    }

    a:hover {
      opacity: 0.8;
      text-decoration: underline;
    }

    #toast {
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 14px 20px;
      border-radius: 8px;
      font-size: 16px;
      z-index: 1000;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.5s ease;
      display: flex;
      align-items: center;
      gap: 10px;
      font-weight: 500;
    }

    #toast.show {
      opacity: 1;
      pointer-events: auto;
    }

    #toast.success {
      background-color: #38a169;
      color: #fff;
    }

    #toast.error {
      background-color: #e53e3e;
      color: #fff;
    }

    @media (max-width: 480px) {
      .login-container {
        padding: 30px 20px;
      }

      h2 {
        font-size: 24px;
      }

      button {
        font-size: 14px;
        padding: 10px;
      }
    }
  </style>
</head>
<body>
  <div class="login-container">
    <h2>Login Admin</h2>
    <form id="loginForm" autocomplete="off" novalidate>
      <input type="email" name="email" placeholder="Email" />
      <div class="error" id="emailError"></div>

      <div class="password-wrapper">
        <input type="password" id="password" name="password" placeholder="Password" />
        <span class="toggle-password" id="togglePassword" title="Show/Hide Password">üëÅÔ∏è</span>
        
      </div>
      <a href=""><div class="forgot" id="forgotPassword">forgot password</div></a>
      <div class="error" id="passwordError"></div>


      <button type="submit">Login</button>
    </form>
    <a href="/register">Don't have an account? Register</a>
  </div>

  <div id="toast"></div>

  <script>

    const isLoggedIn = localStorage.getItem("adminToken");
     if (isLoggedIn) {
       window.location.href = "/dashboard";
     }



    const togglePassword = document.getElementById('togglePassword');
    const passwordInput = document.getElementById('password');

    togglePassword.addEventListener('click', () => {
      const isPassword = passwordInput.type === 'password';
      passwordInput.type = isPassword ? 'text' : 'password';
      togglePassword.textContent = isPassword ? 'üôà' : 'üëÅÔ∏è';
    });

    function showToast(message, type = 'success') {
       const toast = document.getElementById('toast');
      const icon = type === 'success' ? '‚úîÔ∏è' : '‚ùå';

      toast.className = '';
      toast.textContent = '';
      toast.classList.add('show', type);
      toast.innerHTML = `<span>${icon}</span>${message}`;

      setTimeout(() => {
        toast.classList.remove('show', 'success', 'error');
      }, 3000);
    }

    const form = document.getElementById('loginForm');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      document.getElementById('emailError').textContent = '';
      document.getElementById('passwordError').textContent = '';

      const formData = new FormData(form);    
      const data = Object.fromEntries(formData.entries());  

      const { email, password } = data;
      let hasError = false;

      if (!email.trim()) {
        document.getElementById('emailError').textContent = 'Email is required';
        hasError = true;
      } else {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
          document.getElementById('emailError').textContent = 'Invalid email address';
          hasError = true;
        }
      }

    
      if (!password.trim()) {
        document.getElementById('passwordError').textContent = 'Password is required';
        hasError = true;
      }

      if (hasError) return;

      try {
        const response = await fetch('http://localhost:8000/admin/login', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email, password }),
        });
       let result = {};
  try {
    result = await response.json();
  } catch (jsonError) {
    console.warn('Invalid JSON response');
  }
        if (response.ok) {
          showToast(result.message) 
          localStorage.setItem("adminToken", result.data.token);
          localStorage.setItem("adminName", result.data.admin.userName);
          localStorage.setItem("adminId",result.data.admin.id)
          setTimeout(() => {
            window.location.href = '/dashboard';
          }, 800);
        } else {
          showToast(result?.message || 'Login failed. Please try again.', 'error');
        }
      } catch (err) {
        showToast('Something went wrong.. Please try again.', 'error');
        console.error(err);
      }
    });
  </script>
</body>
</html>
